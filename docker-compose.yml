version: "3"

services:

  app:
    build: ./app
    restart: always
    env_file:
      - .env
    ports:
      - "9005:9005"
    volumes:
      - static:/static
      - app_logs:/applogs
    depends_on:
      - db
      - broker
  
  server:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static:/www/static:ro
      - nginx_logs:/var/log/nginx/export
    depends_on:
      - app
  
  broker:
    image: rabbitmq:management-alpine
    restart: always
    ports:
      - "8080:15672"
      - "5672:5672"
    env_file:
      - .env
  
  worker:
    build:
      context: ./app
      dockerfile: Dockerfile_celery
    restart: always
    env_file:
      - .env
    depends_on:
      - broker
    volumes:
      - worker_logs:/applogs
  
  db:
    build:
      context: ./postgresql
    restart: always
    env_file:
      - .env
    volumes:
        - db:/var/lib/postgresql/data
        - db_logs:/var/log/export

  loki:
    image: grafana/loki:2.9.4
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml -log.level=warn

  promtail:
    image: grafana/promtail:2.9.4
    volumes:
      - ./promtail_config.yml:/etc/promtail/config.yml
      - nginx_logs:/var/log/nginx
      - app_logs:/var/log/app
      - worker_logs:/var/log/worker
      - db_logs:/var/log/db
    command: -config.file=/etc/promtail/config.yml

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
  
volumes:
  static:
  db:
  nginx_logs:
  app_logs:
  worker_logs:
  db_logs: